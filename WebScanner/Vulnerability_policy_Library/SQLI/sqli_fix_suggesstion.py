#--Created by WD
#python 3.6
#coding:utf-8

SQLI_AFFECTION = [
    '''(1)数据库信息泄漏：数据库中存放的用户的隐私信息的泄露。作为数据的存储中心，数据库里往往保存着各类的隐私信息，SQL注入攻击能导致这些隐私信息透明于攻击者；
(2)网站被挂马，传播恶意软件：修改数据库一些字段的值，嵌入网马链接，进行挂马攻击；
(3)网页篡改：通过操作数据库对特定网页进行篡改；
(4)数据库被恶意操作：数据库服务器被攻击，数据库的系统管理员帐户被篡改；
(5)服务器被远程控制、 安装后门。经由数据库服务器提供的操作系统支持，让黑客得以修改或控制操作系统；
(6)破坏硬盘数据，瘫痪全系统。''',
]


SQLI_FIX_SUGGESTION =[
    '''每个提交信息的客户端页面，通过服务器端脚本（JSP、ASP、ASPX、PHP等脚本）生成的客户端页面，提交的表单（FORM）或发出的连接请求中包含的所有变量，必须对变量的值进行检查。过滤其中包含的特殊字符，或对字符进行转义处理。特殊字符包括：
SQL语句关键词：如 and 、or 、select、declare、update、xp_cmdshell；
SQL语句特殊符号：’、”、;等；
此外，Web应用系统接入数据库服务器使用的用户不应为系统管理员，用户角色应遵循最小权限原则；具体建议如下：
1、严格定义应用程序可接受的数据类型（例如，字符串、字母数字字符等）。
2、使用肯定的定义而非否定的定义。验证输入中是否存在不正确的字符。采用这样一种基本原理：使用肯定的定义而非否定的定义。有关详细信息，请参阅下面的代码示例。
3、不要向最终用户显示提供的信息（如表名）可用于策划攻击的错误消息。
4、定义受允许的字符集。例如，如果某个字段要接受数字，请使该字段仅接受数字。
5、定义应用程序接受的最大和最小数据长度。
6、指定输入可接受的数字范围。'''
]